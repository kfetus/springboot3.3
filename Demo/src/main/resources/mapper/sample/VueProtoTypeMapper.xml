<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="demo.sample.vuejs.VueProtoTypeMapper">

	<select id="selectOneUserVo" parameterType="demo.common.vo.UserVO" resultType="demo.common.vo.UserVO">
		SELECT A.USER_NO /* LoginMapper.selectOneUserVo 사용자 조회 */
			, A.USER_ID
			, A.USER_PASS
			, A.SALT
			, A.USER_NAME
			, A.USER_IP
			, A.DESCRIP
			, A.GRADE
			, A.REG_DT
			, A.CNG_DT 
			, B.HP_NO
			, B.EMAIL
			, B.ZONE_CODE
			, B.ROAD_ADDR
			, B.JIBUN_ADDR
			, B.DETAIL_ADDR
		FROM login_info A INNER JOIN user_info B ON A.USER_NO = B.USER_NO
	   WHERE USER_ID = #{userId}
<!-- 단방향 암호화. java에서 확인 필요		 AND USER_PASS = #{userPass} -->
	</select>

	<select id="selectUserInfoOne" parameterType="String" resultType="demo.common.vo.UserVO">
		SELECT A.USER_NO /* UserInfoMapper.selectUserInfoOne 사용자 정보 상세 조회 */
			, B.USER_ID 
			, B.USER_NAME
			, B.USER_IP
			, B.DESCRIP
			, B.GRADE 
			, B.REG_DT
			, B.CNG_DT 
			, A.HP_NO
			, A.EMAIL
			, A.ZONE_CODE
			, A.ROAD_ADDR
			, A.JIBUN_ADDR
			, A.DETAIL_ADDR
		FROM user_info A INNER JOIN login_info B ON A.USER_NO = B.USER_NO
		WHERE A.USER_NO =  #{userNo}
	</select>


    <!-- Error querying database. Cause: java.lang.NullPointerException 에러가 발생하면 select 값에 null이 있을경우임. sql 로그를 찍기 위한 
    net.sf.log4jdbc.sql.jdbcapi.DriverSpy 이녀석이 찍는것이라서 log4j에서 jdbc.resultsettable 을 없애거나 아래와 깉이 coalesce로 null을 ''으로 치환으로 해결 -->
	<select id="selectScheduleList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT /* MariaDB용 ScheduleMapper.selectScheduleList 스케쥴 목록 조회 */
			COALESCE( MIN(CASE WHEN S.DOW=1 THEN CONCAT(CAST(SUBSTRING(S.CAL_DAY,7) AS INTEGER),"|", COALESCE(S.SCHEDULE,'')) END) ,'') AS SUN,
			COALESCE( MIN(CASE WHEN S.DOW=2 THEN CONCAT(CAST(SUBSTRING(S.CAL_DAY,7) AS INTEGER),"|", COALESCE(S.SCHEDULE,'')) END) ,'') AS MON,
			COALESCE( MIN(CASE WHEN S.DOW=3 THEN CONCAT(CAST(SUBSTRING(S.CAL_DAY,7) AS INTEGER),"|", COALESCE(S.SCHEDULE,'')) END) ,'') AS TUE,
			COALESCE( MIN(CASE WHEN S.DOW=4 THEN CONCAT(CAST(SUBSTRING(S.CAL_DAY,7) AS INTEGER),"|", COALESCE(S.SCHEDULE,'')) END) ,'') AS WED,
			COALESCE( MIN(CASE WHEN S.DOW=5 THEN CONCAT(CAST(SUBSTRING(S.CAL_DAY,7) AS INTEGER),"|", COALESCE(S.SCHEDULE,'')) END) ,'') AS THU,
			COALESCE( MIN(CASE WHEN S.DOW=6 THEN CONCAT(CAST(SUBSTRING(S.CAL_DAY,7) AS INTEGER),"|", COALESCE(S.SCHEDULE,'')) END) ,'') AS FRI,
			COALESCE( MIN(CASE WHEN S.DOW=7 THEN CONCAT(CAST(SUBSTRING(S.CAL_DAY,7) AS INTEGER),"|", COALESCE(S.SCHEDULE,'')) END) ,'') AS SAT
		FROM (
		SELECT R.CAL_DAY
				, R.DOW
				, R.WEEK_DAY
				, GROUP_CONCAT(R.SCHEDULE SEPARATOR '@') AS SCHEDULE
		 FROM ( 
			SELECT A.CAL_DAY 
				, DAYOFWEEK( DATE_FORMAT(A.CAL_DAY,'%Y%m%d')) AS DOW 
				, WEEK(DATE_FORMAT(A.CAL_DAY, '%Y%m%d')) AS WEEK_DAY 
				, D.SCHEDULE
			  FROM (
				WITH RECURSIVE T AS (
				    SELECT DATE_FORMAT(#{yyyymmdd}, '%Y%m01')AS CAL_DAY , WEEK(DATE_FORMAT(#{yyyymmdd}, '%Y%m01')) AS WEEK_DAY
				    UNION ALL
				    SELECT CAL_DAY + 1 , WEEK(DATE_FORMAT(CAL_DAY+1, '%Y%m%d')) AS WEEK_DAY from T where DATE_FORMAT(CAL_DAY, '%Y%m%d') &lt; LAST_DAY(DATE_FORMAT(#{yyyymmdd}, '%Y%m%d'))
				)
				SELECT * FROM T
			) A LEFT OUTER JOIN (
								SELECT M.YYYYMMDD,
										CONCAT( M.HH	,":", M.MM ," ", M.SCHEDULE) AS SCHEDULE
								   FROM MY_SCHEDULE M
								  WHERE M.USER_NO = #{userNo}
								  ORDER BY M.YYYYMMDD, M.HH, M.MM
						) D ON A.CAL_DAY = D.YYYYMMDD
			) R
			GROUP BY R.CAL_DAY, R.DOW, R.WEEK_DAY
		) S
		GROUP BY S.WEEK_DAY
	</select>

	<select id="selectScheduleOneDay" parameterType="String" resultType="java.util.HashMap">
		SELECT S.YYYYMMDD /* ScheduleMapper.selectScheduleOne 스케쥴 상세 조회 */
				, S.HH
				, S.MM
				, S.SCHEDULE
		  FROM MY_SCHEDULE S
		 WHERE S.YYYYMMDD = #{yyyymmdd}
		   AND S.USER_NO = #{userNo}
		ORDER BY S.YYYYMMDD, S.HH,S.MM
	</select>

	<insert id="insertSchedule" parameterType="java.util.HashMap">
		INSERT /* ScheduleMapper.insertSchedule 스케쥴 인서트 */
		  INTO MY_SCHEDULE (
				YYYYMMDD
				, HH
				, MM
				, USER_NO
				, SCHEDULE
				, CNG_USER_NO
				, REG_DT
				, CNG_DT
		) 
		 VALUES 
			<foreach collection="list" item="rowData" separator=",">
			 (
				#{rowData.YYYYMMDD}
				,#{rowData.HH}
				,#{rowData.MM}
				,#{rowData.userNo}
				,#{rowData.SCHEDULE}
				,#{rowData.userNo}
				,CURRENT_TIMESTAMP()
				,CURRENT_TIMESTAMP()
	       	 ) 
			</foreach>		 
	</insert>

	<delete id="deletescheduleDay" parameterType="java.util.HashMap">
		DELETE /* ScheduleMapper.deletescheduleDay 스케쥴 하루 삭제 */
		  FROM MY_SCHEDULE 
		 WHERE YYYYMMDD = #{yyyymmdd}
		   AND USER_NO = #{userNo}
	</delete>	
	
</mapper>